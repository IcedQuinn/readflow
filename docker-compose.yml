version: "3"

services:
  ########################################
  # PostgreSQL
  ########################################
  db:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-reader}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - internal
    volumes:
      - db-data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  ########################################
  # API
  ########################################
  api:
    build: .
    image: "ncarlier/readflow:latest"
    restart: always
    depends_on:
      - db
    networks:
      - internal
    environment:
      - APP_DB=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB:-reader}?sslmode=disable
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 2s
      retries: 15
    labels:
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:api.${FQDN}"
      - "traefik.docker.network=${GW_NETWORK_NAME}"

  ########################################
  # Webapp
  ########################################
  app:
    build: ./ui/
    image: "ncarlier/readflow-app:latest"
    restart: always
    networks:
      - web
      - internal
    labels:
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:${FQDN}"
      - "traefik.docker.network=${GW_NETWORK_NAME}"

networks:
  web:
    external:
      name: "${GW_NETWORK_NAME}"
  internal:
    external: false

volumes:
  db-data:
